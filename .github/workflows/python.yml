name: Python

on:
  push:

jobs:
  macos:
    runs-on: macos-latest
    # strategy:
    #   matrix:
    #     target: [x86_64, universal2-apple-darwin]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
      # - name: Build wheels - x86_64
      #   uses: messense/maturin-action@v1
      #   with:
      #     target: x86_64
      #     args: --release --out dist --sdist -m python/Cargo.toml
      # - name: Install built wheel - x86_64
      #   run: |
      #     pip install dist/filtration_domination-0.1.0-cp37-abi3-macosx_10_12_x86_64.whl --force-reinstall
      #     python -c "import filtration_domination"
      - name: Build wheels - universal2
        uses: messense/maturin-action@v1
        with:
          args: --release --universal2 --out dist -m python/Cargo.toml
      - name: Install built wheel - universal2
        run: |
          pip install dist/filtration-domination-*universal2.whl --force-reinstall
          python -c "import filtration_domination"
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
          architecture: ${{ matrix.target }}
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist -m python/Cargo.toml
      - name: Install built wheel
        run: |
          pip install filtration-domination --no-index --find-links dist --force-reinstall
          python -c "import filtration_domination"
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, i686]
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Build Wheels
      uses: PyO3/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        manylinux: auto
        args: -i ${{ matrix.python-version }} --release --out dist -m python/Cargo.toml
    - name: Test installing built wheel
      if: matrix.target == 'x86_64'
      run: |
        pip install filtration-domination --no-index --find-links dist --force-reinstall
        python -c "import filtration_domination"
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ linux, macos, windows ]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install --upgrade twine
          twine upload --skip-existing *
